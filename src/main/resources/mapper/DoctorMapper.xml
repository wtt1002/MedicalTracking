<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lab.c505.dao.DoctorMapper">
  <resultMap id="BaseResultMap" type="lab.c505.entity.Doctor">
    <id column="doctor_id" jdbcType="BIGINT" property="doctor_id" />
    <result column="doctor_number" jdbcType="VARCHAR" property="doctor_number" />
    <result column="doctor_name" jdbcType="VARCHAR" property="doctor_name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="hosp_id" jdbcType="BIGINT" property="hosp_id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    doctor_id, doctor_number, doctor_name, gender, phone, hosp_id
  </sql>
  <select id="selectByExample" parameterType="lab.c505.entity.DoctorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from doctor
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="lab.c505.entity.DoctorExample">
    delete from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lab.c505.entity.Doctor">
    insert into doctor (doctor_id, doctor_number, doctor_name, 
      gender, phone, hosp_id
      )
    values (#{doctor_id,jdbcType=BIGINT}, #{doctor_number,jdbcType=VARCHAR}, #{doctor_name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{hosp_id,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="lab.c505.entity.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctor_id != null">
        doctor_id,
      </if>
      <if test="doctor_number != null">
        doctor_number,
      </if>
      <if test="doctor_name != null">
        doctor_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="hosp_id != null">
        hosp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctor_id != null">
        #{doctor_id,jdbcType=BIGINT},
      </if>
      <if test="doctor_number != null">
        #{doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="doctor_name != null">
        #{doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hosp_id != null">
        #{hosp_id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lab.c505.entity.DoctorExample" resultType="java.lang.Integer">
    select count(*) from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doctor
    <set>
      <if test="record.doctor_id != null">
        doctor_id = #{record.doctor_id,jdbcType=BIGINT},
      </if>
      <if test="record.doctor_number != null">
        doctor_number = #{record.doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="record.doctor_name != null">
        doctor_name = #{record.doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.hosp_id != null">
        hosp_id = #{record.hosp_id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doctor
    set doctor_id = #{record.doctor_id,jdbcType=BIGINT},
      doctor_number = #{record.doctor_number,jdbcType=VARCHAR},
      doctor_name = #{record.doctor_name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      hosp_id = #{record.hosp_id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lab.c505.entity.Doctor">
    update doctor
    <set>
      <if test="doctor_number != null">
        doctor_number = #{doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="doctor_name != null">
        doctor_name = #{doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hosp_id != null">
        hosp_id = #{hosp_id,jdbcType=BIGINT},
      </if>
    </set>
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lab.c505.entity.Doctor">
    update doctor
    set doctor_number = #{doctor_number,jdbcType=VARCHAR},
      doctor_name = #{doctor_name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      hosp_id = #{hosp_id,jdbcType=BIGINT}
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="lab.c505.entity.Doctor">
    <id column="doctor_id" jdbcType="BIGINT" property="doctor_id" />
    <result column="doctor_number" jdbcType="VARCHAR" property="doctor_number" />
    <result column="doctor_name" jdbcType="VARCHAR" property="doctor_name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="hosp_id" jdbcType="BIGINT" property="hosp_id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    doctor_id, doctor_number, doctor_name, gender, phone, hosp_id
  </sql>
  <select id="selectByExample" parameterType="lab.c505.entity.DoctorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from doctor
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="lab.c505.entity.DoctorExample">
    delete from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lab.c505.entity.Doctor">
    insert into doctor (doctor_id, doctor_number, doctor_name, 
      gender, phone, hosp_id
      )
    values (#{doctor_id,jdbcType=BIGINT}, #{doctor_number,jdbcType=VARCHAR}, #{doctor_name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{hosp_id,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="lab.c505.entity.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctor_id != null">
        doctor_id,
      </if>
      <if test="doctor_number != null">
        doctor_number,
      </if>
      <if test="doctor_name != null">
        doctor_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="hosp_id != null">
        hosp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctor_id != null">
        #{doctor_id,jdbcType=BIGINT},
      </if>
      <if test="doctor_number != null">
        #{doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="doctor_name != null">
        #{doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hosp_id != null">
        #{hosp_id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lab.c505.entity.DoctorExample" resultType="java.lang.Integer">
    select count(*) from doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doctor
    <set>
      <if test="record.doctor_id != null">
        doctor_id = #{record.doctor_id,jdbcType=BIGINT},
      </if>
      <if test="record.doctor_number != null">
        doctor_number = #{record.doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="record.doctor_name != null">
        doctor_name = #{record.doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.hosp_id != null">
        hosp_id = #{record.hosp_id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doctor
    set doctor_id = #{record.doctor_id,jdbcType=BIGINT},
      doctor_number = #{record.doctor_number,jdbcType=VARCHAR},
      doctor_name = #{record.doctor_name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      hosp_id = #{record.hosp_id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lab.c505.entity.Doctor">
    update doctor
    <set>
      <if test="doctor_number != null">
        doctor_number = #{doctor_number,jdbcType=VARCHAR},
      </if>
      <if test="doctor_name != null">
        doctor_name = #{doctor_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hosp_id != null">
        hosp_id = #{hosp_id,jdbcType=BIGINT},
      </if>
    </set>
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lab.c505.entity.Doctor">
    update doctor
    set doctor_number = #{doctor_number,jdbcType=VARCHAR},
      doctor_name = #{doctor_name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      hosp_id = #{hosp_id,jdbcType=BIGINT}
    where doctor_id = #{doctor_id,jdbcType=BIGINT}
  </update>
</mapper>