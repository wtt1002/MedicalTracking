<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lab.c505.dao.PatientMapper">
  <resultMap id="BaseResultMap" type="lab.c505.entity.Patient">
    <id column="patient_id" jdbcType="BIGINT" property="patient_id" />
    <result column="patient_number" jdbcType="VARCHAR" property="patient_number" />
    <result column="patient_name" jdbcType="VARCHAR" property="patient_name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="patient_nation" jdbcType="TINYINT" property="patient_nation" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="onset_age" jdbcType="TINYINT" property="onset_age" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobile_phone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="emergency_contact" jdbcType="VARCHAR" property="emergency_contact" />
    <result column="emergency_phone" jdbcType="VARCHAR" property="emergency_phone" />
    <result column="is_married" jdbcType="TINYINT" property="is_married" />
    <result column="province" jdbcType="TINYINT" property="province" />
    <result column="city" jdbcType="TINYINT" property="city" />
    <result column="county" jdbcType="TINYINT" property="county" />
    <result column="medical_method" jdbcType="TINYINT" property="medical_method" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    patient_id, patient_number, patient_name, gender, patient_nation, birthday, onset_age, 
    mobile_phone, telephone, emergency_contact, emergency_phone, is_married, province, 
    city, county, medical_method
  </sql>
  <select id="selectByExample" parameterType="lab.c505.entity.PatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from patient
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from patient
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="lab.c505.entity.PatientExample">
    delete from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lab.c505.entity.Patient">
    insert into patient (patient_id, patient_number, patient_name, 
      gender, patient_nation, birthday, 
      onset_age, mobile_phone, telephone, 
      emergency_contact, emergency_phone, is_married, 
      province, city, county, 
      medical_method)
    values (#{patient_id,jdbcType=BIGINT}, #{patient_number,jdbcType=VARCHAR}, #{patient_name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{patient_nation,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{onset_age,jdbcType=TINYINT}, #{mobile_phone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{emergency_contact,jdbcType=VARCHAR}, #{emergency_phone,jdbcType=VARCHAR}, #{is_married,jdbcType=TINYINT}, 
      #{province,jdbcType=TINYINT}, #{city,jdbcType=TINYINT}, #{county,jdbcType=TINYINT}, 
      #{medical_method,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="lab.c505.entity.Patient">
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patient_id != null">
        patient_id,
      </if>
      <if test="patient_number != null">
        patient_number,
      </if>
      <if test="patient_name != null">
        patient_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="patient_nation != null">
        patient_nation,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="onset_age != null">
        onset_age,
      </if>
      <if test="mobile_phone != null">
        mobile_phone,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="emergency_contact != null">
        emergency_contact,
      </if>
      <if test="emergency_phone != null">
        emergency_phone,
      </if>
      <if test="is_married != null">
        is_married,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="medical_method != null">
        medical_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patient_id != null">
        #{patient_id,jdbcType=BIGINT},
      </if>
      <if test="patient_number != null">
        #{patient_number,jdbcType=VARCHAR},
      </if>
      <if test="patient_name != null">
        #{patient_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="patient_nation != null">
        #{patient_nation,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="onset_age != null">
        #{onset_age,jdbcType=TINYINT},
      </if>
      <if test="mobile_phone != null">
        #{mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="emergency_contact != null">
        #{emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="emergency_phone != null">
        #{emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="is_married != null">
        #{is_married,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=TINYINT},
      </if>
      <if test="county != null">
        #{county,jdbcType=TINYINT},
      </if>
      <if test="medical_method != null">
        #{medical_method,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lab.c505.entity.PatientExample" resultType="java.lang.Integer">
    select count(*) from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update patient
    <set>
      <if test="record.patient_id != null">
        patient_id = #{record.patient_id,jdbcType=BIGINT},
      </if>
      <if test="record.patient_number != null">
        patient_number = #{record.patient_number,jdbcType=VARCHAR},
      </if>
      <if test="record.patient_name != null">
        patient_name = #{record.patient_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.patient_nation != null">
        patient_nation = #{record.patient_nation,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.onset_age != null">
        onset_age = #{record.onset_age,jdbcType=TINYINT},
      </if>
      <if test="record.mobile_phone != null">
        mobile_phone = #{record.mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.emergency_contact != null">
        emergency_contact = #{record.emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="record.emergency_phone != null">
        emergency_phone = #{record.emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="record.is_married != null">
        is_married = #{record.is_married,jdbcType=TINYINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=TINYINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=TINYINT},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=TINYINT},
      </if>
      <if test="record.medical_method != null">
        medical_method = #{record.medical_method,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update patient
    set patient_id = #{record.patient_id,jdbcType=BIGINT},
      patient_number = #{record.patient_number,jdbcType=VARCHAR},
      patient_name = #{record.patient_name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      patient_nation = #{record.patient_nation,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      onset_age = #{record.onset_age,jdbcType=TINYINT},
      mobile_phone = #{record.mobile_phone,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      emergency_contact = #{record.emergency_contact,jdbcType=VARCHAR},
      emergency_phone = #{record.emergency_phone,jdbcType=VARCHAR},
      is_married = #{record.is_married,jdbcType=TINYINT},
      province = #{record.province,jdbcType=TINYINT},
      city = #{record.city,jdbcType=TINYINT},
      county = #{record.county,jdbcType=TINYINT},
      medical_method = #{record.medical_method,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lab.c505.entity.Patient">
    update patient
    <set>
      <if test="patient_number != null">
        patient_number = #{patient_number,jdbcType=VARCHAR},
      </if>
      <if test="patient_name != null">
        patient_name = #{patient_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="patient_nation != null">
        patient_nation = #{patient_nation,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="onset_age != null">
        onset_age = #{onset_age,jdbcType=TINYINT},
      </if>
      <if test="mobile_phone != null">
        mobile_phone = #{mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="emergency_contact != null">
        emergency_contact = #{emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="emergency_phone != null">
        emergency_phone = #{emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="is_married != null">
        is_married = #{is_married,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=TINYINT},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=TINYINT},
      </if>
      <if test="medical_method != null">
        medical_method = #{medical_method,jdbcType=TINYINT},
      </if>
    </set>
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lab.c505.entity.Patient">
    update patient
    set patient_number = #{patient_number,jdbcType=VARCHAR},
      patient_name = #{patient_name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      patient_nation = #{patient_nation,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      onset_age = #{onset_age,jdbcType=TINYINT},
      mobile_phone = #{mobile_phone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      emergency_contact = #{emergency_contact,jdbcType=VARCHAR},
      emergency_phone = #{emergency_phone,jdbcType=VARCHAR},
      is_married = #{is_married,jdbcType=TINYINT},
      province = #{province,jdbcType=TINYINT},
      city = #{city,jdbcType=TINYINT},
      county = #{county,jdbcType=TINYINT},
      medical_method = #{medical_method,jdbcType=TINYINT}
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="lab.c505.entity.Patient">
    <id column="patient_id" jdbcType="BIGINT" property="patient_id" />
    <result column="patient_number" jdbcType="VARCHAR" property="patient_number" />
    <result column="patient_name" jdbcType="VARCHAR" property="patient_name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="patient_nation" jdbcType="TINYINT" property="patient_nation" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="onset_age" jdbcType="TINYINT" property="onset_age" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobile_phone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="emergency_contact" jdbcType="VARCHAR" property="emergency_contact" />
    <result column="emergency_phone" jdbcType="VARCHAR" property="emergency_phone" />
    <result column="is_married" jdbcType="TINYINT" property="is_married" />
    <result column="province" jdbcType="TINYINT" property="province" />
    <result column="city" jdbcType="TINYINT" property="city" />
    <result column="county" jdbcType="TINYINT" property="county" />
    <result column="medical_method" jdbcType="TINYINT" property="medical_method" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    patient_id, patient_number, patient_name, gender, patient_nation, birthday, onset_age, 
    mobile_phone, telephone, emergency_contact, emergency_phone, is_married, province, 
    city, county, medical_method
  </sql>
  <select id="selectByExample" parameterType="lab.c505.entity.PatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from patient
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from patient
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="lab.c505.entity.PatientExample">
    delete from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lab.c505.entity.Patient">
    insert into patient (patient_id, patient_number, patient_name, 
      gender, patient_nation, birthday, 
      onset_age, mobile_phone, telephone, 
      emergency_contact, emergency_phone, is_married, 
      province, city, county, 
      medical_method)
    values (#{patient_id,jdbcType=BIGINT}, #{patient_number,jdbcType=VARCHAR}, #{patient_name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{patient_nation,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{onset_age,jdbcType=TINYINT}, #{mobile_phone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{emergency_contact,jdbcType=VARCHAR}, #{emergency_phone,jdbcType=VARCHAR}, #{is_married,jdbcType=TINYINT}, 
      #{province,jdbcType=TINYINT}, #{city,jdbcType=TINYINT}, #{county,jdbcType=TINYINT}, 
      #{medical_method,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="lab.c505.entity.Patient">
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patient_id != null">
        patient_id,
      </if>
      <if test="patient_number != null">
        patient_number,
      </if>
      <if test="patient_name != null">
        patient_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="patient_nation != null">
        patient_nation,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="onset_age != null">
        onset_age,
      </if>
      <if test="mobile_phone != null">
        mobile_phone,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="emergency_contact != null">
        emergency_contact,
      </if>
      <if test="emergency_phone != null">
        emergency_phone,
      </if>
      <if test="is_married != null">
        is_married,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="medical_method != null">
        medical_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patient_id != null">
        #{patient_id,jdbcType=BIGINT},
      </if>
      <if test="patient_number != null">
        #{patient_number,jdbcType=VARCHAR},
      </if>
      <if test="patient_name != null">
        #{patient_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="patient_nation != null">
        #{patient_nation,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="onset_age != null">
        #{onset_age,jdbcType=TINYINT},
      </if>
      <if test="mobile_phone != null">
        #{mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="emergency_contact != null">
        #{emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="emergency_phone != null">
        #{emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="is_married != null">
        #{is_married,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=TINYINT},
      </if>
      <if test="county != null">
        #{county,jdbcType=TINYINT},
      </if>
      <if test="medical_method != null">
        #{medical_method,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lab.c505.entity.PatientExample" resultType="java.lang.Integer">
    select count(*) from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update patient
    <set>
      <if test="record.patient_id != null">
        patient_id = #{record.patient_id,jdbcType=BIGINT},
      </if>
      <if test="record.patient_number != null">
        patient_number = #{record.patient_number,jdbcType=VARCHAR},
      </if>
      <if test="record.patient_name != null">
        patient_name = #{record.patient_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.patient_nation != null">
        patient_nation = #{record.patient_nation,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.onset_age != null">
        onset_age = #{record.onset_age,jdbcType=TINYINT},
      </if>
      <if test="record.mobile_phone != null">
        mobile_phone = #{record.mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.emergency_contact != null">
        emergency_contact = #{record.emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="record.emergency_phone != null">
        emergency_phone = #{record.emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="record.is_married != null">
        is_married = #{record.is_married,jdbcType=TINYINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=TINYINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=TINYINT},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=TINYINT},
      </if>
      <if test="record.medical_method != null">
        medical_method = #{record.medical_method,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update patient
    set patient_id = #{record.patient_id,jdbcType=BIGINT},
      patient_number = #{record.patient_number,jdbcType=VARCHAR},
      patient_name = #{record.patient_name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      patient_nation = #{record.patient_nation,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      onset_age = #{record.onset_age,jdbcType=TINYINT},
      mobile_phone = #{record.mobile_phone,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      emergency_contact = #{record.emergency_contact,jdbcType=VARCHAR},
      emergency_phone = #{record.emergency_phone,jdbcType=VARCHAR},
      is_married = #{record.is_married,jdbcType=TINYINT},
      province = #{record.province,jdbcType=TINYINT},
      city = #{record.city,jdbcType=TINYINT},
      county = #{record.county,jdbcType=TINYINT},
      medical_method = #{record.medical_method,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lab.c505.entity.Patient">
    update patient
    <set>
      <if test="patient_number != null">
        patient_number = #{patient_number,jdbcType=VARCHAR},
      </if>
      <if test="patient_name != null">
        patient_name = #{patient_name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="patient_nation != null">
        patient_nation = #{patient_nation,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="onset_age != null">
        onset_age = #{onset_age,jdbcType=TINYINT},
      </if>
      <if test="mobile_phone != null">
        mobile_phone = #{mobile_phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="emergency_contact != null">
        emergency_contact = #{emergency_contact,jdbcType=VARCHAR},
      </if>
      <if test="emergency_phone != null">
        emergency_phone = #{emergency_phone,jdbcType=VARCHAR},
      </if>
      <if test="is_married != null">
        is_married = #{is_married,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=TINYINT},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=TINYINT},
      </if>
      <if test="medical_method != null">
        medical_method = #{medical_method,jdbcType=TINYINT},
      </if>
    </set>
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lab.c505.entity.Patient">
    update patient
    set patient_number = #{patient_number,jdbcType=VARCHAR},
      patient_name = #{patient_name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      patient_nation = #{patient_nation,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      onset_age = #{onset_age,jdbcType=TINYINT},
      mobile_phone = #{mobile_phone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      emergency_contact = #{emergency_contact,jdbcType=VARCHAR},
      emergency_phone = #{emergency_phone,jdbcType=VARCHAR},
      is_married = #{is_married,jdbcType=TINYINT},
      province = #{province,jdbcType=TINYINT},
      city = #{city,jdbcType=TINYINT},
      county = #{county,jdbcType=TINYINT},
      medical_method = #{medical_method,jdbcType=TINYINT}
    where patient_id = #{patient_id,jdbcType=BIGINT}
  </update>
</mapper>